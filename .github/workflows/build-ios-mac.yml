name: Build iOS IPA

on:
  # Trigger on tags
  push:
    tags:
      - 'v*'
      - 'nightly*'
  
  # Manual trigger
  workflow_dispatch:
    inputs:
      upload-tag:
        description: 'Tag name for upload'
        required: false
        default: 'nightly'
        type: string

env:
  RUST_VERSION: "1.75"
  MAC_RUST_VERSION: "1.81"
  FLUTTER_VERSION: "3.24.5"
  VCPKG_BINARY_SOURCES: "clear;x-gha,readwrite"
  VCPKG_COMMIT_ID: "120deac3062162151622ca4860575a33844ba10b"
  VERSION: "1.4.2"
  # Use tag name if triggered by tag, otherwise use input or default
  TAG_NAME: ${{ github.ref_name || inputs.upload-tag || 'nightly' }}

jobs:
  generate-bridge:
    name: Generate Bridge Files
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          submodules: recursive
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ env.RUST_VERSION }}
          components: rustfmt
      
      - name: Generate bridge files
        run: |
          # Add your bridge generation commands here
          # This is a placeholder - adapt to your actual bridge generation logic
          cargo build --features flutter --lib || true
          
      - name: Upload bridge artifacts
        uses: actions/upload-artifact@v3
        with:
          name: bridge-artifact
          path: |
            ./src/flutter_ffi.rs
            ./flutter/rust/src/bridge_generated.rs
            ./flutter/rust/src/bridge_generated.io.rs
          retention-days: 1

  build-rustdesk-ios:
    name: Build iOS IPA (Unsigned)
    runs-on: macos-13
    needs: [generate-bridge]
    steps:
      - name: Export GitHub Actions cache environment variables
        uses: actions/github-script@v6
        with:
          script: |
            core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
            core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');

      - name: Install dependencies
        run: |
          brew install nasm yasm

      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          flutter-version: ${{ env.FLUTTER_VERSION }}

      - name: Patch flutter
        run: |
          cd $(dirname $(dirname $(which flutter)))
          if [[ "3.24.5" == "${{ env.FLUTTER_VERSION }}" ]]; then
            git apply ${{ github.workspace }}/.github/patches/flutter_3.24.4_dropdown_menu_enableFilter.diff || true
          fi

      - name: Setup vcpkg with Github Actions binary cache
        uses: lukka/run-vcpkg@v11
        with:
          vcpkgGitCommitId: ${{ env.VCPKG_COMMIT_ID }}
          doNotCache: false

      - name: Install vcpkg dependencies
        run: |
          if ! $VCPKG_ROOT/vcpkg \
            install \
            --triplet arm64-ios \
            --x-install-root="$VCPKG_ROOT/installed"; then
            find "${VCPKG_ROOT}/" -name "*.log" | while read -r _1; do
              echo "$_1:"
              echo "======"
              cat "$_1"
              echo "======"
              echo ""
            done
            exit 1
          fi

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ env.MAC_RUST_VERSION }}
          targets: aarch64-apple-ios
          components: "rustfmt"

      - uses: Swatinem/rust-cache@v2
        with:
          prefix-key: rustdesk-lib-cache-ios
          key: aarch64-apple-ios

      - name: Restore bridge files
        uses: actions/download-artifact@v3
        with:
          name: bridge-artifact
          path: ./

      - name: Build rustdesk lib
        run: |
          rustup target add aarch64-apple-ios
          cargo build --features flutter,hwcodec --release --target aarch64-apple-ios --lib

      - name: Build unsigned IPA
        run: |
          cd flutter
          # Build IPA without code signing
          flutter build ipa --release --no-codesign
          
          # Rename IPA with version
          if [ -f "build/ios/archive/Runner.xcarchive/Products/Applications/Runner.app" ]; then
            # Create IPA manually from the app bundle
            mkdir -p build/ios/ipa
            cd build/ios/archive/Runner.xcarchive/Products
            mkdir Payload
            cp -r Applications/*.app Payload/
            zip -r ../../../../../ipa/rustdesk-${{ env.VERSION }}-ios-unsigned.ipa Payload
            cd ../../../../../
          elif [ -f "build/ios/ipa/rustdesk.ipa" ]; then
            mv build/ios/ipa/rustdesk.ipa build/ios/ipa/rustdesk-${{ env.VERSION }}-ios-unsigned.ipa
          fi
          
          # List generated files for verification
          ls -la build/ios/ipa/ || true

      - name: Upload IPA as Actions Artifact
        uses: actions/upload-artifact@v4
        with:
          name: rustdesk-ios-unsigned-${{ env.VERSION }}
          path: flutter/build/ios/ipa/*.ipa
          retention-days: 30

      - name: Upload IPA to Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch'
        with:
          prerelease: ${{ contains(env.TAG_NAME, 'nightly') }}
          tag_name: ${{ env.TAG_NAME }}
          files: |
            flutter/build/ios/ipa/*.ipa
          body: |
            ## iOS Build (Unsigned)
            
            This is an unsigned IPA file for iOS. To install:
            1. Use a signing service or tool to sign the IPA with your certificate
            2. Install via Xcode, Apple Configurator, or other deployment methods
            
            **Note:** This IPA is not signed and cannot be installed directly on iOS devices without signing.

      - name: Generate build info
        if: always()
        run: |
          echo "## Build Information" > build_info.md
          echo "- Version: ${{ env.VERSION }}" >> build_info.md
          echo "- Tag: ${{ env.TAG_NAME }}" >> build_info.md
          echo "- Build Date: $(date -u +'%Y-%m-%d %H:%M:%S UTC')" >> build_info.md
          echo "- Flutter Version: ${{ env.FLUTTER_VERSION }}" >> build_info.md
          echo "- Rust Version: ${{ env.MAC_RUST_VERSION }}" >> build_info.md
          echo "- Runner: $(uname -a)" >> build_info.md
          
          cat build_info.md

      - name: Upload build info
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: build-info-ios
          path: build_info.md
          retention-days: 30
