name: Build the flutter version of the RustDesk

on:
  workflow_call:
    inputs:
      upload-artifact:
        type: boolean
        default: true
      upload-tag:
        type: string
        default: "nightly"
  # 添加手动触发
  workflow_dispatch:
    inputs:
      upload-artifact:
        description: '是否上传产物到Release'
        type: boolean
        default: true
        required: true
      upload-tag:
        description: '发布标签名称'
        type: string
        default: 'manual-build'
        required: true
      build-ios:
        description: '是否构建iOS版本'
        type: boolean
        default: true
        required: true
  # 添加tag触发
  push:
    tags:
      - 'v*'

env:
  SCITER_RUST_VERSION: "1.75"
  RUST_VERSION: "1.75"
  MAC_RUST_VERSION: "1.81"
  CARGO_NDK_VERSION: "3.1.2"
  LLVM_VERSION: "15.0.6"
  FLUTTER_VERSION: "3.24.5"
  # 动态设置TAG_NAME：如果是tag触发，使用实际的tag名；否则使用输入参数
  TAG_NAME: ${{ github.ref_name != '' && startsWith(github.ref_name, 'v') && github.ref_type == 'tag' && github.ref_name || inputs.upload-tag }}
  VCPKG_COMMIT_ID: "120deac3062162151622ca4860575a33844ba10b"
  VERSION: "1.4.2"
  UPLOAD_ARTIFACT: "${{ inputs.upload-artifact }}"

jobs:
  generate-bridge:
    if: ${{ inputs.build-ios != false && github.event_name != 'push' || github.event_name == 'push' && inputs.build-ios != false }}
    uses: ./.github/workflows/bridge.yml

  build-rustdesk-ios:
    if: ${{ inputs.build-ios != false && github.event_name != 'push' || github.event_name == 'push' && inputs.build-ios != false }}
    name: Build RustDesk iOS IPA
    runs-on: macos-13
    needs: [generate-bridge]
    
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install dependencies
        run: |
          brew install nasm yasm

      - name: Install flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          flutter-version: ${{ env.FLUTTER_VERSION }}

      - name: Patch flutter
        run: |
          cd $(dirname $(dirname $(which flutter)))
          [[ "3.24.5" == ${{env.FLUTTER_VERSION}} ]] && git apply ${{ github.workspace }}/.github/patches/flutter_3.24.4_dropdown_menu_enableFilter.diff

      - name: Setup vcpkg with Github Actions binary cache
        uses: lukka/run-vcpkg@v11
        with:
          vcpkgGitCommitId: ${{ env.VCPKG_COMMIT_ID }}
          doNotCache: false

      - name: Install vcpkg dependencies
        run: |
          if ! $VCPKG_ROOT/vcpkg \
            install \
            --triplet arm64-ios \
            --x-install-root="$VCPKG_ROOT/installed"; then
            find "${VCPKG_ROOT}/" -name "*.log" | while read -r _1; do
              echo "$_1:"
              echo "======"
              cat "$_1"
              echo "======"
              echo ""
            done
            exit 1
          fi
        shell: bash

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ env.RUST_VERSION }}
          targets: aarch64-apple-ios
          components: "rustfmt"

      - uses: Swatinem/rust-cache@v2
        with:
          prefix-key: rustdesk-lib-cache-ios
          key: aarch64-apple-ios

      - name: Restore bridge files
        uses: actions/download-artifact@master
        with:
          name: bridge-artifact
          path: ./

      - name: Build rustdesk lib
        run: |
          rustup target add aarch64-apple-ios
          cargo build --features flutter,hwcodec --release --target aarch64-apple-ios --lib

      - name: Build iOS IPA (unsigned)
        shell: bash
        run: |
          cd flutter
          # 创建导出配置plist文件
          cat > ExportOptions.plist << EOF
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
              <key>method</key>
              <string>development</string>
              <key>teamID</key>
              <string></string>
              <key>compileBitcode</key>
              <false/>
              <key>uploadBitcode</key>
              <false/>
              <key>uploadSymbols</key>
              <false/>
              <key>signingStyle</key>
              <string>manual</string>
              <key>provisioningProfiles</key>
              <dict/>
          </dict>
          </plist>
          EOF
          
          flutter build ipa --release --no-codesign --export-options-plist=ExportOptions.plist
          
          # 重命名IPA文件，包含版本和日期信息
          BUILD_DATE=$(date +"%Y%m%d_%H%M%S")
          for ipa_file in build/ios/ipa/*.ipa; do
            mv "$ipa_file" "build/ios/ipa/rustdesk-ios-${{ env.VERSION }}-$BUILD_DATE-unsigned.ipa"
          done

      - name: Upload IPA to Actions Artifacts (可直接下载)
        uses: actions/upload-artifact@v4
        with:
          name: rustdesk-ios-unsigned-ipa
          path: flutter/build/ios/ipa/*.ipa
          retention-days: 30
          # 使用包含版本和日期的文件名
          if-no-files-found: error

      - name: Create Release and Upload IPA to GitHub Release
        if: env.UPLOAD_ARTIFACT == 'true'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.TAG_NAME }}
          prerelease: ${{ !contains(env.TAG_NAME, 'stable') }}
          files: |
            flutter/build/ios/ipa/*.ipa
          body: |
            Unsigned RustDesk iOS IPA build
            
            **版本信息:**
            - 版本: ${{ env.VERSION }}
            - Flutter: ${{ env.FLUTTER_VERSION }}
            - 构建日期: ${{ github.event.head_commit.timestamp || format(time.now(), 'YYYY-MM-DD HH:mm:ss UTC') }}
            - 构建类型: ${{ github.event_name == 'workflow_dispatch' && '手动构建' || '自动构建' }}
            
            **说明:**
            - 此为未签名的 IPA 文件，仅用于测试目的
            - 如需安装到设备，需要自行签名或使用开发者证书
            
            **下载方式:**
            1. 在此Release页面直接下载
            2. 或在Actions页面Artifacts区域下载

      - name: Display Build Info
        run: |
          echo "🎉 iOS IPA 构建完成!"
          echo "📦 IPA 文件已上传到以下位置:"
          echo "   - Actions Artifacts: 可在本工作流运行页面的Artifacts区域下载"
          if [ "$UPLOAD_ARTIFACT" == "true" ]; then
            echo "   - GitHub Release: https://github.com/$GITHUB_REPOSITORY/releases/tag/$TAG_NAME"
          fi
          echo "📱 文件名: $(ls flutter/build/ios/ipa/)"

  # 构建成功提示
  build-success:
    name: 🎉 Build Completed
    runs-on: ubuntu-latest
    needs: [build-rustdesk-ios]
    if: always()
    steps:
      - name: Build Status Report
        run: |
          if [ "${{ needs.build-rustdesk-ios.result }}" == "success" ]; then
            echo "🎉 iOS IPA 构建成功完成!"
            echo "📦 产物已上传到以下位置:"
            echo "   - Actions Artifacts: 可在工作流运行页面直接下载"
            if [ "${{ env.UPLOAD_ARTIFACT }}" == "true" ]; then
              echo "   - GitHub Release: https://github.com/$GITHUB_REPOSITORY/releases/tag/${{ env.TAG_NAME }}"
            fi
          else
            echo "❌ 构建失败，请检查日志"
            exit 1
          fi
