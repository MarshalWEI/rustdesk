name: Build iOS IPA for RustDesk

on:
  push:
    tags:
      - 'v*'  # 在推送以 'v' 开头的 tag 时触发
  workflow_dispatch:  # 允许手动触发

env:
  RUST_VERSION: "1.75"
  FLUTTER_VERSION: "3.24.5"
  VCPKG_COMMIT_ID: "120deac3062162151622ca4860575a33844ba10b"
  VERSION: "1.4.2"

jobs:
  generate-bridge:
    uses: ./.github/workflows/bridge.yml

  build-rustdesk-ios:
    name: Build RustDesk iOS IPA (Unsigned)
    runs-on: macos-13
    needs: [generate-bridge]
    
    steps:
      - name: Export GitHub Actions cache environment variables
        uses: actions/github-script@v6
        with:
          script: |
            core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
            core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');

      - name: Install dependencies
        run: |
          brew install nasm yasm

      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          flutter-version: ${{ env.FLUTTER_VERSION }}

      - name: Patch Flutter
        run: |
          cd $(dirname $(dirname $(which flutter)))
          [[ "3.24.5" == ${{env.FLUTTER_VERSION}} ]] && git apply ${{ github.workspace }}/.github/patches/flutter_3.24.4_dropdown_menu_enableFilter.diff

      - name: Setup vcpkg
        uses: lukka/run-vcpkg@v11
        with:
          vcpkgGitCommitId: ${{ env.VCPKG_COMMIT_ID }}
          doNotCache: false

      - name: Install vcpkg dependencies
        run: |
          if ! $VCPKG_ROOT/vcpkg \
            install \
            --triplet arm64-ios \
            --x-install-root="$VCPKG_ROOT/installed"; then
            find "${VCPKG_ROOT}/" -name "*.log" | while read -r _1; do
              echo "$_1:"
              echo "======"
              cat "$_1"
              echo "======"
              echo ""
            done
            exit 1
          fi
        shell: bash

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ env.RUST_VERSION }}
          targets: aarch64-apple-ios
          components: "rustfmt"

      - uses: Swatinem/rust-cache@v2
        with:
          prefix-key: rustdesk-lib-cache-ios
          key: aarch64-apple-ios

      - name: Restore bridge files
        uses: actions/download-artifact@master
        with:
          name: bridge-artifact
          path: ./

      - name: Build RustDesk library
        run: |
          rustup target add aarch64-apple-ios
          cargo build --features flutter,hwcodec --release --target aarch64-apple-ios --lib

      - name: Create export options plist for unsigned build
        run: |
          cat > ExportOptions.plist << EOF
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
              <key>compileBitcode</key>
              <false/>
              <key>method</key>
              <string>development</string>
              <key>signingStyle</key>
              <string>manual</string>
              <key>stripSwiftSymbols</key>
              <true/>
              <key>teamID</key>
              <string></string>
              <key>thinning</key>
              <string>&lt;none&gt;</string>
              <key>uploadBitcode</key>
              <false/>
              <key>uploadSymbols</key>
              <false/>
          </dict>
          </plist>
          EOF

      - name: Build iOS IPA (Unsigned)
        run: |
          cd flutter
          # 首先构建 xcarchive
          flutter build ipa --release --no-codesign --export-options-plist=../ExportOptions.plist
          
          # 检查生成的文件
          echo "检查构建目录内容:"
          ls -la build/ios/
          echo "检查 archive 目录内容:"
          ls -la build/ios/archive/
          echo "检查 ipa 目录内容:"
          ls -la build/ios/ipa/ || echo "ipa 目录不存在"

      - name: Manual IPA creation if needed
        run: |
          cd flutter
          # 如果自动生成的 IPA 不存在，手动创建
          if [ ! -f "build/ios/ipa/Runner.ipa" ]; then
            echo "自动 IPA 生成失败，尝试手动创建..."
            mkdir -p build/ios/ipa
            cd build/ios/archive/Runner.xcarchive/Products/Applications
            # 创建 Payload 目录并复制 app
            mkdir -p Payload
            cp -r Runner.app Payload/
            # 创建 IPA 文件
            zip -r ../../../../ipa/Runner.ipa Payload
            # 检查结果
            ls -la ../../../../ipa/
          fi

      - name: Get version from tag
        id: get_version
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
          else
            VERSION="nightly-$(date +%Y%m%d)"
          fi
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Upload IPA as artifact
        uses: actions/upload-artifact@v4
        with:
          name: rustdesk-ios-${{ env.VERSION }}-unsigned
          path: flutter/build/ios/ipa/*.ipa
          retention-days: 30

      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.TAG_NAME }}
          files: flutter/build/ios/ipa/*.ipa
          draft: false
          prerelease: false
